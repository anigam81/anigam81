select *
from PortfolioProjects..NashvilleHousing

select SaleDate, cast(SaleDate as Date)
from PortfolioProjects..NashvilleHousing
-- method 1 to change date---

update PortfolioProjects..NashvilleHousing
set SaleDate = cast(SaleDate as Date)

-- method 2---
alter table PortfolioProjects..NashvilleHousing
add SaleDateConverted date

update PortfolioProjects..NashvilleHousing
set SaleDateConverted = SaleDate


-- direct command to change data type
-- alter table PortfolioProjects..NashvilleHousing
-- alter column SaleDate date

-- pouplate property address

select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress
from PortfolioProjects..NashvilleHousing a, PortfolioProjects..NashvilleHousing b
where a.ParcelID = b.ParcelID and a.[UniqueID ] <> b.[UniqueID ] and a.PropertyAddress is null

-- using isnull command

select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, isnull(a.PropertyAddress, b.PropertyAddress)
from PortfolioProjects..NashvilleHousing a, PortfolioProjects..NashvilleHousing b
where a.ParcelID = b.ParcelID and a.[UniqueID ] <> b.[UniqueID ] and a.PropertyAddress is null

update a
set a.PropertyAddress = isnull(a.PropertyAddress, b.PropertyAddress)
from PortfolioProjects..NashvilleHousing a, PortfolioProjects..NashvilleHousing b
where a.ParcelID = b.ParcelID and a.[UniqueID ] <> b.[UniqueID ] and a.PropertyAddress is null

--populating address into diffrent coloumn (Address, city, state)------------------
select PropertyAddress
from PortfolioProjects..NashvilleHousing

select 
PARSENAME(replace(Owneraddress , ',', '.') , 3) as address,
PARSENAME(replace(Owneraddress , ',', '.') , 2) as city ,
PARSENAME(replace(Owneraddress , ',', '.') , 1) as state

from portfolioprojects.dbo.NashvilleHousing 
select 
PARSENAME(replace(Owneraddress , ',', '.') , 3) as address,
PARSENAME(replace(Owneraddress , ',', '.') , 2) as city ,
PARSENAME(replace(Owneraddress , ',', '.') , 1) as state

from portfolioprojects.dbo.NashvilleHousing 
where Owneraddress is not null


Alter table portfolioprojects.dbo.NashvilleHousing 
add Ownersplitaddress nvarchar(255)

update  portfolioprojects.dbo.NashvilleHousing 
set Ownersplitaddress = PARSENAME(replace(Owneraddress , ',', '.') , 3)

Alter table portfolioprojects.dbo.NashvilleHousing 
add Ownersplitcity nvarchar(255)

update  portfolioprojects.dbo.NashvilleHousing 
set Ownersplitcity = PARSENAME(replace(Owneraddress , ',', '.') , 2)


Alter table portfolioprojects.dbo.NashvilleHousing 
add Ownersplitstate nvarchar(255)

update  portfolioprojects.dbo.NashvilleHousing 
set Ownersplitstate = PARSENAME(replace(Owneraddress , ',', '.') , 1)

--changing y and N in sold/vacnt feild -------------------------------------------------

select *
from portfolioprojects.dbo.NashvilleHousing 

select distinct(soldAsvacant), COUNT(soldAsvacant)
from portfolioprojects.dbo.NashvilleHousing 
group by Soldasvacant
order by 2



select Soldasvacant ,
case when soldasvacant = 'N' then 'NO'
    when SoldAsvacant = 'Y' then 'YES'
	 else soldasvacant 
	 end
from portfolioprojects.dbo.NashvilleHousing 

update portfolioprojects.dbo.NashvilleHousing 
set 
soldasvacant = case when soldasvacant = 'N' then 'NO'
                    when SoldAsvacant = 'Y' then 'YES'
	                else soldasvacant 
	                end


---to check the results----

select distinct(soldAsvacant), COUNT(soldAsvacant)
from portfolioprojects.dbo.NashvilleHousing 
group by Soldasvacant
order by 2

---Deleting Duplicate-------------------------------------------------------
Select *
from portfolioprojects.dbo.NashvilleHousing 

WIth rownumcte as (
Select *, row_number() over (Partition By ParcelID, PropertyAddress, SalePrice, SaleDate, LegalReference Order by UniqueID) as row_num
from portfolioprojects.dbo.NashvilleHousing )

--select *
--from rownumcte

Delete
from rownumcte
where row_num > 1

